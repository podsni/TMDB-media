name: Release Plugin

on:
  push:
    tags:
      - '*.*.*'
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Version tag to release (e.g., 1.2.3 or v1.2.3)'
        required: true
        type: string
      prerelease:
        description: 'Mark as prerelease'
        required: false
        default: false
        type: boolean

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build plugin
        run: npm run build

      - name: Verify build artifacts
        run: |
          test -f main.js || (echo 'main.js missing' && exit 1)
          test -f manifest.json || (echo 'manifest.json missing' && exit 1)
          if [ -f styles.css ]; then echo 'styles.css present (optional)'; else echo 'styles.css missing (ok if unused)'; fi

      - name: Derive version
        id: ver
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG="${GITHUB_REF#refs/tags/}"
          fi
          CLEAN_TAG="${TAG#v}"
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "clean_tag=${CLEAN_TAG}" >> $GITHUB_OUTPUT

      - name: Read manifest metadata
        id: manifest
        run: |
          PLUGIN_ID=$(jq -r '.id' manifest.json)
          echo "plugin_id=${PLUGIN_ID}" >> $GITHUB_OUTPUT

      - name: Create ZIP bundle
        id: zip
        run: |
          NAME="${{ steps.manifest.outputs.plugin_id }}-${{ steps.ver.outputs.clean_tag }}.zip"
          # -j to junk paths so files are at root of the zip
          if [ -f styles.css ]; then
            zip -j "$NAME" manifest.json main.js styles.css
          else
            zip -j "$NAME" manifest.json main.js
          fi
          echo "zip_name=$NAME" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.ver.outputs.tag }}
          name: ${{ steps.ver.outputs.clean_tag }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease || false }}
          files: |
            manifest.json
            main.js
            styles.css
            ${{ steps.zip.outputs.zip_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
